(self.webpackChunksleact_ts_front=self.webpackChunksleact_ts_front||[]).push([[650],{1885:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>he});var a=n(6809),r=n.n(a);const l={},o=e=>{if(!e)return[void 0,t];function t(){e&&l[e]&&(l[e].disconnect(),delete l[e])}return l[e]||(l[e]=r()("https://sleact.nodebird.com/ws-"+e,{transports:["websocket"]}),console.info("create socket",e,l[e].id)),[l[e],t]};var i=n(8517);const c=(0,i.Z)("button",{target:"e190xuym0"})("background:transparent;border:none;width:26px;height:26px;display:inline-flex;justify-content:center;align-items:center;color:white;margin-left:10px;cursor:pointer;",(({collapse:e})=>e&&"\n    & i {\n      transform: none;\n    }\n  "),";");var s=n(7294),d=n(5977),p=n(3727);const m=({userData:e,channelData:t})=>{const{workspace:n}=(0,d.UO)(),[a]=o(n),[r,l]=(0,s.useState)(!1),[i,m]=(0,s.useState)({}),u=(0,s.useCallback)((()=>{l((e=>!e))}),[]),g=(0,s.useCallback)((e=>()=>{m((t=>({...t,[e]:void 0})))}),[]);(0,s.useEffect)((()=>{console.log("workspace 바꼈다",n),m({})}),[n]);const h=t=>{if(console.log("message왔다",t),t.content.match(/@\[(.+?)\]\((\d)\)/g)?.find((t=>t.match(/@\[(.+?)\]\((\d)\)/)[2]===e?.id.toString())))return m((e=>({...e,["c-"+t.ChannelId]:(e["c-"+t.ChannelId]||0)+1})));m((e=>({...e,["c-"+t.ChannelId]:e["c-"+t.ChannelId]||0})))};return(0,s.useEffect)((()=>(a?.on("message",h),console.log("socket on message",a?.hasListeners("message"),a),()=>{a?.off("message",h),console.log("socket off message",a?.hasListeners("message"))})),[a,e]),s.createElement(s.Fragment,null,s.createElement("h2",null,s.createElement(c,{collapse:r,onClick:u},s.createElement("i",{className:"c-icon p-channel_sidebar__section_heading_expand p-channel_sidebar__section_heading_expand--show_more_feature c-icon--caret-right c-icon--inherit c-icon--inline","data-qa":"channel-section-collapse","aria-hidden":"true"})),s.createElement("span",null,"Channels")),s.createElement("div",null,!r&&t?.map((e=>{const t=i["c-"+e.id];return s.createElement(p.OL,{key:e.name,activeClassName:"selected",to:`/workspace/${n}/channel/${e.name}`,onClick:g("c-"+e.id)},s.createElement("span",{className:void 0!==t&&t>=0?"bold":void 0},"# ",e.name),void 0!==t&&t>0&&s.createElement("span",{className:"count"},t))}))))};var u=n(3564),g=n(6848);const h=({userData:e})=>{const{workspace:t}=(0,d.UO)(),{data:n}=(0,g.ZP)(e?`/api/workspace/${t}/members`:null,u.Z),[a]=o(t),[r,l]=(0,s.useState)(!1),[i,m]=(0,s.useState)({}),[h,x]=(0,s.useState)([]),b=(0,s.useCallback)((()=>{l((e=>!e))}),[]),f=(0,s.useCallback)((e=>()=>{m((t=>({...t,[e]:0})))}),[]),k=e=>{console.log("dm왔다",e),m((t=>({...t,[e.SenderId]:t[e.SenderId]?t[e.SenderId]+1:1})))};return(0,s.useEffect)((()=>{console.log("workspace 바꼈다",t),x([]),m({})}),[t]),(0,s.useEffect)((()=>(a?.on("onlineList",(e=>{x(e)})),a?.on("dm",k),console.log("socket on dm",a?.hasListeners("dm"),a),()=>{a?.off("dm",k),console.log("socket off dm",a?.hasListeners("dm")),a?.off("onlineList")})),[a]),s.createElement(s.Fragment,null,s.createElement("h2",null,s.createElement(c,{collapse:r,onClick:b},s.createElement("i",{className:"c-icon p-channel_sidebar__section_heading_expand p-channel_sidebar__section_heading_expand--show_more_feature c-icon--caret-right c-icon--inherit c-icon--inline","data-qa":"channel-section-collapse","aria-hidden":"true"})),s.createElement("span",null,"Direct Messages")),s.createElement("div",null,!r&&n?.map((n=>{const a=h.includes(n.id),r=i[n.id]||0;return s.createElement(p.OL,{key:n.id,activeClassName:"selected",to:`/workspace/${t}/dm/${n.id}`,onClick:f(n.id)},s.createElement("i",{className:"c-icon p-channel_sidebar__presence_icon p-channel_sidebar__presence_icon--dim_enabled c-presence "+(a?"c-presence--active c-icon--presence-online":"c-icon--presence-offline"),"aria-hidden":"true","data-qa":"presence_indicator","data-qa-presence-self":"false","data-qa-presence-active":"false","data-qa-presence-dnd":"false"}),s.createElement("span",{className:r>0?"bold":void 0},n.nickname),n.id===e?.id&&s.createElement("span",null," (나)"),r>0&&s.createElement("span",{className:"count"},r))}))))},x=(0,i.Z)("div",{target:"eus8aqr0"})({name:"lwth7x",styles:"position:fixed;top:0;right:0;left:0;bottom:0;z-index:1000;& > div{position:absolute;display:inline-block;--saf-0:rgba(var(--sk_foreground_low,29,28,29),0.13);box-shadow:0 0 0 1px var(--saf-0),0 4px 12px 0 rgba(0,0,0,0.12);background-color:rgba(var(--sk_foreground_min_solid,248,248,248),1);border-radius:6px;user-select:none;min-width:360px;z-index:512;max-height:calc(100vh - 20px);color:rgb(29,28,29);}"}),b=(0,i.Z)("button",{target:"eus8aqr1"})({name:"87xlfi",styles:"position:absolute;right:10px;top:6px;background:transparent;border:none;font-size:30px;cursor:pointer;"}),f=({closeButton:e,style:t,show:n,children:a,onCloseModal:r})=>{const l=(0,s.useCallback)((e=>{e.stopPropagation()}),[]);return n?s.createElement(x,{onClick:r},s.createElement("div",{onClick:l,style:t},e&&s.createElement(b,{onClick:r},"×"),a)):null};f.defaultProps={closeButton:!0};const k=f,E=(0,i.Z)("div",{target:"e1q3ybao0"})({name:"1ol8hdt",styles:"position:fixed;text-align:center;left:0;bottom:0;top:0;right:0;z-index:1022;& > div{margin-top:200px;display:inline-block;width:440px;background:white;--saf-0:rgba(var(--sk_foreground_low,29,28,29),0.13);box-shadow:0 0 0 1px var(--saf-0),0 4px 12px 0 rgba(0,0,0,0.12);background-color:rgba(var(--sk_foreground_min_solid,248,248,248),1);border-radius:6px;user-select:none;max-width:440px;padding:30px 40px 0;z-index:1012;position:relative;}"}),y=(0,i.Z)("button",{target:"e1q3ybao1"})({name:"87xlfi",styles:"position:absolute;right:10px;top:6px;background:transparent;border:none;font-size:30px;cursor:pointer;"}),w=({show:e,children:t,onCloseModal:n})=>{const a=(0,s.useCallback)((e=>{e.stopPropagation()}),[]);return e?s.createElement(E,{onClick:n},s.createElement("div",{onClick:a},s.createElement(y,{onClick:n},"×"),t)):null};var v=n(8678),_=n(1039);const C=(0,i.Z)("div",{target:"e298qi10"})({name:"136i1lu",styles:"display:flex;width:100%;padding:20px;padding-top:0;"}),Z=(0,i.Z)("form",{target:"e298qi11"})({name:"1128hi6",styles:"color:rgb(29,28,29);font-size:15px;width:100%;border-radius:4px;border:1px solid rgb(29,28,29);"}),S=(0,i.Z)(_.r,{target:"e298qi12"})({name:"hgrcve",styles:"font-family:Slack-Lato,appleLogo,sans-serif;font-size:15px;padding:8px 9px;& strong{background:skyblue;}& textarea{height:44px;padding:9px 10px !important;outline:none !important;border-radius:4px !important;resize:none !important;line-height:22px;border:none;}& ul{border:1px solid lightgray;max-height:200px;overflow-y:auto;padding:9px 10px;background:white;border-radius:4px;width:150px;}"}),$=(0,i.Z)("div",{target:"e298qi13"})({name:"pvyb1v",styles:"position:relative;background:rgb(248,248,248);height:41px;display:flex;border-top:1px solid rgb(221,221,221);align-items:center;border-bottom-left-radius:4px;border-bottom-right-radius:4px;"}),z=(0,i.Z)("button",{target:"e298qi14"})({name:"b9l5gg",styles:"position:absolute;right:5px;top:5px;"}),I=(0,i.Z)("button",{target:"e298qi15"})("padding:4px 20px;background:transparent;border:none;display:flex;align-items:center;color:rgb(28,29,28);width:100%;& img{margin-right:5px;}",(({focus:e})=>e&&"\n    background: #1264a3;\n    color: white;\n  "),";");var q=n(9367),A=n.n(q),D=n(6182),B=n.n(D);const T=({onSubmitForm:e,chat:t,onChangeChat:n,placeholder:a,data:r})=>{const l=(0,s.useRef)(null);(0,s.useEffect)((()=>{l.current&&A()(l.current)}),[l.current]);const o=(0,s.useCallback)((t=>{"Enter"===t.key&&(t.shiftKey||(t.preventDefault(),e(t)))}),[t]),i=(0,s.useCallback)(((e,t,n,a,l)=>r?s.createElement(I,{focus:l},s.createElement("img",{src:B().url(r[a].email,{s:"20px"}),alt:r[a].nickname}),s.createElement("span",null,n)):null),[r]);return s.createElement(C,null,s.createElement(Z,{onSubmit:e},s.createElement(S,{id:"editor-chat",value:t,onChange:n,onKeyPress:o,placeholder:a,inputRef:l,allowSuggestionsAboveCursor:!0},s.createElement(_.p,{appendSpaceOnAdd:!0,trigger:"@",data:r?.map((e=>({id:e.id,display:e.nickname})))||[],renderSuggestion:i})),s.createElement($,null,s.createElement(z,{className:"c-button-unstyled c-icon_button c-icon_button--light c-icon_button--size_medium c-texty_input__button c-texty_input__button--send"+(t?.trim()?"":" c-texty_input__button--disabled"),"data-qa":"texty_send_button","aria-label":"Send message","data-sk":"tooltip_parent",type:"submit",disabled:!t?.trim()},s.createElement("i",{className:"c-icon c-icon--paperplane-filled","aria-hidden":"true"})))))},N=(0,i.Z)("div",{target:"ec89ap00"})({name:"13fa69t",styles:"display:flex;padding:8px 20px;&:hover{background:#eee;}& > div:first-of-type{display:flex;width:36px;margin-right:8px;& img{width:36px;height:36px;}}& > div:last-of-type{display:flex;flex:1;}& a{text-decoration:none;color:deepskyblue;}"});var M=n(7484),P=n.n(M),R=n(8817);const U=(0,s.memo)((({data:e})=>{const{workspace:t}=(0,d.UO)(),n="Sender"in e?e.Sender:e.User,a=(0,s.useMemo)((()=>(0,R.Z)({pattern:/@\[(.+?)\]\((\d+?)\)|\n/g,decorator(e,n){const a=e.match(/@\[(.+?)\]\((\d+?)\)/);return a?s.createElement(p.rU,{key:e+n,to:`/workspace/${t}/dm/${a[2]}`},"@",a[1]):s.createElement("br",{key:n})},input:e.content})),[e.content]);return s.createElement(N,null,s.createElement("div",null,s.createElement("img",{src:B().url(n.email,{s:"36px",d:"retro"}),alt:n.nickname})),s.createElement("div",{style:{flexWrap:"wrap"}},s.createElement("div",{style:{display:"flex",flex:"0 0 100%",alignItems:"center"}},s.createElement("b",{style:{marginRight:5}},n.nickname),s.createElement("span",{style:{fontSize:12}},P()(e.createdAt).format("h:mm A"))),s.createElement("p",{style:{flex:"0 0 100%",margin:0}},a)))})),j=(0,i.Z)("div",{target:"e1jqbxcr0"})({name:"1dpnw7g",styles:"width:100%;display:flex;flex:1;"}),O=(0,i.Z)("section",{target:"e1jqbxcr1"})({name:"j6nott",styles:"margin-top:20px;border-top:1px solid #eee;"}),L=(0,i.Z)("div",{target:"e1jqbxcr2"})({name:"8ji0yp",styles:"display:flex;justify-content:center;flex:1;width:100%;position:sticky;top:14px;& button{font-weight:bold;font-size:13px;height:28px;line-height:27px;padding:0 16px;z-index:2;--saf-0:rgba(var(--sk_foreground_low,29,28,29),0.13);box-shadow:0 0 0 1px var(--saf-0),0 1px 3px 0 rgba(0,0,0,0.08);border-radius:24px;position:relative;top:-13px;background:white;border:none;outline:none;}"});var W=n(1298);const F=({scrollbarRef:e,isReachingEnd:t,isEmpty:n,chatSections:a,setSize:r})=>{const l=(0,s.useCallback)((a=>{0!==a.scrollTop||t||n||r((e=>e+1)).then((()=>{e.current?.scrollTop(e.current?.getScrollHeight()-a.scrollHeight)}))}),[t,n]);return s.createElement(j,null,s.createElement(W.$B,{autoHide:!0,ref:e,onScrollFrame:l},Object.entries(a).map((([e,t])=>s.createElement(O,{className:"section-"+e,key:e},s.createElement(L,null,s.createElement("button",null,e)),t.map((e=>s.createElement(U,{key:e.id,data:e}))))))))},H=(0,i.Z)("header",{target:"exhfy1p0"})({name:"10in16a",styles:"height:64px;display:flex;width:100%;--saf-0:rgba(var(--sk_foreground_low,29,28,29),0.13);box-shadow:0 1px 0 var(--saf-0);padding:20px 16px 20px 20px;font-weight:bold;align-items:center;"});var Y=n(3046);function K(e){const t={};return e.forEach((e=>{const n=P()(e.createdAt).format("YYYY-MM-DD");Array.isArray(t[n])?t[n].push(e):t[n]=[e]})),t}var G=n(9669),J=n.n(G),Q=n(4723);const V=()=>{const{workspace:e,channel:t}=(0,d.UO)(),[n]=o(e),{data:a,revalidate:r}=(0,g.ZP)("/api/user",u.Z),{data:l}=(0,g.ZP)(`/api/workspace/${e}/channels`,u.Z),i=l?.find((e=>e.name===t)),{data:c,revalidate:p,mutate:m,setSize:h}=(0,g.g_)((n=>`/api/workspace/${e}/channel/${t}/chats?perPage=20&page=${n+1}`),u.Z),{data:x,revalidate:b}=(0,g.ZP)(a?`/api/workspace/${e}/channel/${t}/members`:null,u.Z),[f,k,E]=(0,v.Z)(""),[y,_,C]=(0,v.Z)(""),[Z,S]=(0,s.useState)(!1),$=(0,s.useRef)(null),z=0===c?.[0]?.length,I=z||c&&c[c.length-1]?.length<20,q=(0,s.useCallback)((n=>{n.preventDefault(),y&&y.trim()&&J().post(`/api/workspace/${e}/channel/${t}/member`,{email:y}).then((()=>{b(),S(!1),C("")})).catch((e=>{console.dir(e),Q.Am.error(e.response?.data,{position:"bottom-center"})}))}),[y]),A=(0,s.useCallback)((()=>{S(!1)}),[]),D=(0,s.useCallback)((n=>{if(n.preventDefault(),f?.trim()&&c&&i&&a){const n=f;m((e=>(e[0].unshift({id:(c[0][0]?.id||0)+1,content:n,UserId:a.id,User:a,createdAt:new Date,ChannelId:i.id,Channel:i}),e)),!1).then((()=>{E(""),$.current&&(console.log("scrollToBottom!"),$.current.scrollToBottom())})),J().post(`/api/workspace/${e}/channel/${t}/chat`,{content:n}).catch(console.error)}}),[f,e,t,i,$.current,a,c]),B=e=>{e.Channel.name===t&&e.UserId!==a?.id&&m((t=>(t[0].unshift(e),t)),!1).then((()=>{$.current&&($.current.getScrollHeight()<$.current.getClientHeight()+$.current.getScrollTop()+150?(console.log("scrollToBottom!"),$.current.scrollToBottom()):Q.Am.success("새 메시지가 도착했습니다.",{onClick(){$.current?.scrollToBottom()},closeOnClick:!0}))}))};(0,s.useEffect)((()=>(n?.on("message",B),()=>{n?.off("message",B)})),[$.current,n,a]),(0,s.useEffect)((()=>{1===c?.length&&(console.log("toBottom",c),$.current?.scrollToBottom())}),[c,$.current]);const N=(0,s.useCallback)((()=>{S(!0)}),[]);if(l&&!i)return s.createElement(d.l_,{to:`/workspace/${e}/channel/일반`});const M=K(c?[].concat(...c).reverse():[]);return s.createElement("div",{style:{display:"flex",flexWrap:"wrap",height:"calc(100vh - 38px)",flexFlow:"column"}},s.createElement(H,null,s.createElement("span",null,"#",t),s.createElement("div",{style:{display:"flex",flex:1,justifyContent:"flex-end",alignItems:"center"}},s.createElement("span",null,x?.length),s.createElement("button",{onClick:N,className:"c-button-unstyled p-ia__view_header__button","aria-label":"Add people to #react-native","data-sk":"tooltip_parent",type:"button"},s.createElement("i",{className:"c-icon p-ia__view_header__button_icon c-icon--add-user","aria-hidden":"true"})))),s.createElement(F,{scrollbarRef:$,isReachingEnd:I,isEmpty:z,chatSections:M,setSize:h}),s.createElement(T,{onSubmitForm:D,chat:f,onChangeChat:k,placeholder:"Message #"+t,data:x}),s.createElement(w,{show:Z,onCloseModal:A},s.createElement("form",{onSubmit:q},s.createElement(Y.__,{id:"member-label"},s.createElement("span",null,"채널 멤버 초대"),s.createElement(Y.II,{id:"member",value:y,onChange:_})),s.createElement(Y.zx,{type:"submit"},"생성하기"))),s.createElement(Q.Ix,{position:"bottom-center"}))},X=(0,i.Z)("header",{target:"egh2dki0"})({name:"i5rome",styles:"height:64px;display:flex;width:100%;--saf-0:rgba(var(--sk_foreground_low,29,28,29),0.13);box-shadow:0 1px 0 var(--saf-0);padding:20px 16px 20px 20px;font-weight:bold;align-items:center;& img{margin-right:5px;}"}),ee=()=>{const{workspace:e,id:t}=(0,d.UO)(),[n]=o(e),{data:a}=(0,g.ZP)("/api/user",u.Z),{data:r}=(0,g.ZP)(`/api/workspace/${e}/user/${t}`,u.Z),{data:l,revalidate:i,mutate:c,setSize:p}=(0,g.g_)((n=>`/api/workspace/${e}/dm/${t}/chats?perPage=20&page=${n+1}`),u.Z),[m,h,x]=(0,v.Z)(""),b=(0,s.useRef)(null),f=0===l?.[0]?.length,k=f||l&&l[l.length-1]?.length<20,E=(0,s.useCallback)((n=>{if(n.preventDefault(),m?.trim()&&l){const n=m;c((e=>(e[0].unshift({id:(l[0][0]?.id||0)+1,content:n,SenderId:a.id,Sender:a,ReceiverId:r.id,Receiver:r,createdAt:new Date}),e)),!1).then((()=>{x(""),b.current&&(console.log("scrollToBottom!"),b.current.scrollToBottom())})),J().post(`/api/workspace/${e}/dm/${t}/chat`,{content:m}).catch(console.error)}}),[m,e,t,b.current,r,l]),y=e=>{e.SenderId===Number(t)&&a.id!==Number(t)&&c((t=>(t[0].unshift(e),t)),!1).then((()=>{b.current&&(b.current.getScrollHeight()<b.current.getClientHeight()+b.current.getScrollTop()+150?(console.log("scrollToBottom!"),b.current.scrollToBottom()):Q.Am.success("새 메시지가 도착했습니다.",{onClick(){b.current?.scrollToBottom()},closeOnClick:!0}))}))};if((0,s.useEffect)((()=>(n?.on("dm",y),()=>{n?.off("dm",y)})),[b.current,n,t]),(0,s.useEffect)((()=>{1===l?.length&&(console.log("toBottom",l),b.current?.scrollToBottom())}),[l,b.current]),!r||!a)return null;const w=K(l?[].concat(...l).reverse():[]);return s.createElement("div",{style:{display:"flex",flexWrap:"wrap",height:"calc(100vh - 38px)",flexFlow:"column"}},s.createElement(X,null,s.createElement("img",{src:B().url(r.email,{s:"24px",d:"retro"}),alt:r.nickname}),s.createElement("span",null,r.nickname)),s.createElement(F,{scrollbarRef:b,isReachingEnd:k,isEmpty:f,chatSections:w,setSize:p}),s.createElement(T,{onSubmitForm:E,chat:m,onChangeChat:h,placeholder:"Message "+r.nickname,data:[]}))};n(5202);const te=(0,i.Z)("div",{target:"e1yu0210"})({name:"146q31f",styles:"float:right;"}),ne=(0,i.Z)("header",{target:"e1yu0211"})({name:"z7c3yo",styles:"height:38px;background:#350d36;color:#ffffff;box-shadow:0 1px 0 0 rgba(255,255,255,0.1);padding:5px;text-align:center;"}),ae=(0,i.Z)("img",{target:"e1yu0212"})({name:"sw188w",styles:"width:28px;height:28px;position:absolute;top:5px;right:16px;"}),re=(0,i.Z)("div",{target:"e1yu0213"})({name:"m1xq0m",styles:"display:flex;padding:20px;& img{display:flex;}& > div{display:flex;flex-direction:column;margin-left:10px;}& #profile-name{font-weight:bold;display:inline-flex;}& #profile-active{font-size:13px;display:inline-flex;}"}),le=(0,i.Z)("button",{target:"e1yu0214"})({name:"xsdsuh",styles:"border:none;width:100%;border-top:1px solid rgb(29,28,29);background:transparent;display:block;height:33px;padding:5px 20px 5px;outline:none;cursor:pointer;"}),oe=(0,i.Z)("div",{target:"e1yu0215"})({name:"13pmxen",styles:"display:flex;flex:1;"}),ie=(0,i.Z)("div",{target:"e1yu0216"})({name:"kbjkj2",styles:"width:65px;display:inline-flex;flex-direction:column;align-items:center;background:#3f0e40;border-top:1px solid rgb(82,38,83);border-right:1px solid rgb(82,38,83);vertical-align:top;text-align:center;padding:15px 0 0;"}),ce=(0,i.Z)("nav",{target:"e1yu0217"})({name:"1o7bixd",styles:"width:260px;display:inline-flex;flex-direction:column;background:#3f0e40;color:rgb(188,171,188);vertical-align:top;& a{padding-left:36px;color:inherit;text-decoration:none;height:28px;line-height:28px;display:flex;align-items:center;&.selected{color:white;}}& .bold{color:white;font-weight:bold;}& .count{margin-left:auto;background:#cd2553;border-radius:16px;display:inline-block;font-size:12px;font-weight:700;height:18px;line-height:18px;padding:0 9px;color:white;margin-right:16px;}& h2{height:36px;line-height:36px;margin:0;text-overflow:ellipsis;overflow:hidden;white-space:nowrap;font-size:15px;}"}),se=(0,i.Z)("button",{target:"e1yu0218"})({name:"mf88dq",styles:"height:64px;line-height:64px;border:none;width:100%;text-align:left;border-top:1px solid rgb(82,38,83);border-bottom:1px solid rgb(82,38,83);font-weight:900;font-size:24px;background:transparent;text-overflow:ellipsis;overflow:hidden;white-space:nowrap;padding:0;padding-left:16px;margin:0;color:white;cursor:pointer;"}),de=(0,i.Z)("div",{target:"e1yu0219"})({name:"1bavzcg",styles:"height:calc(100vh - 102px);overflow-y:auto;"}),pe=(0,i.Z)("div",{target:"e1yu02110"})({name:"1gcspn6",styles:"padding:10px 0 0;& h2{padding-left:20px;}& > button{width:100%;height:28px;padding:4px;border:none;background:transparent;border-top:1px solid rgb(28,29,28);cursor:pointer;&:last-of-type{border-bottom:1px solid rgb(28,29,28);}}"}),me=(0,i.Z)("div",{target:"e1yu02111"})({name:"1rr4qq7",styles:"flex:1;"}),ue=(0,i.Z)("button",{target:"e1yu02112"})({name:"1u5ecpm",styles:"color:white;font-size:24px;display:inline-block;width:40px;height:40px;background:transparent;border:none;cursor:pointer;"}),ge=(0,i.Z)("button",{target:"e1yu02113"})({name:"1uwj8s5",styles:"display:inline-block;width:40px;height:40px;border-radius:10px;background:white;border:3px solid #3f0e40;margin-bottom:15px;font-size:18px;font-weight:700;color:black;cursor:pointer;"}),he=()=>{const e=(0,d.UO)(),{workspace:t}=((0,d.TH)(),(0,d.$B)(),(0,d.k6)(),e),[n,a]=o(t),{data:r,revalidate:l}=(0,g.ZP)("/api/user",u.Z),{data:i,revalidate:c}=(0,g.ZP)(r?`/api/workspace/${t}/channels`:null,u.Z);console.log("rerender","userData",r,"channelData",i);const[x,b]=(0,s.useState)(!1),[f,E]=(0,s.useState)(!1),[y,_]=(0,s.useState)(!1),[C,Z]=(0,s.useState)(!1),[S,$]=(0,s.useState)(!1),[z,I,q]=(0,v.Z)(""),[A,D,T]=(0,v.Z)(""),[N,M,P]=(0,v.Z)(""),[R,U,j]=(0,v.Z)(""),O=(0,s.useCallback)((()=>{J().post("/api/logout").then((()=>{l()})).catch((e=>{console.dir(e),Q.Am.error(e.response?.data,{position:"bottom-center"})}))}),[]),L=(0,s.useCallback)((e=>{e.preventDefault(),z&&z.trim()&&A&&A.trim()&&J().post("/api/workspace",{workspace:z,url:A}).then((()=>{l(),b(!1),q(""),T("")})).catch((e=>{console.dir(e),Q.Am.error(e.response?.data,{position:"bottom-center"})}))}),[z,A]),W=(0,s.useCallback)((e=>{e.preventDefault(),N&&N.trim()&&J().post(`/api/workspace/${t}/channel`,{name:N}).then((()=>{c(),_(!1),P("")})).catch((e=>{console.dir(e),Q.Am.error(e.response?.data,{position:"bottom-center"})}))}),[N]),F=(0,s.useCallback)((e=>{e.preventDefault(),R&&R.trim()&&J().post(`/api/workspace/${t}/member`,{email:R}).then((()=>{c(),E(!1),j("")})).catch((e=>{console.dir(e),Q.Am.error(e.response?.data,{position:"bottom-center"})}))}),[R]),H=(0,s.useCallback)((()=>{b(!0)}),[]),K=(0,s.useCallback)((()=>{_(!0)}),[]),G=(0,s.useCallback)((()=>{E(!0)}),[]),X=(0,s.useCallback)((()=>{b(!1),_(!1),E(!1)}),[]),he=(0,s.useCallback)((()=>{Z((e=>!e))}),[]),xe=(0,s.useCallback)((()=>{$((e=>!e))}),[]);return(0,s.useEffect)((()=>()=>{console.info("disconnect socket",t),a()}),[t]),(0,s.useEffect)((()=>{i&&r&&(console.info("로그인하자"),n?.emit("login",{id:r?.id,channels:i.map((e=>e.id))}))}),[r,i]),!1===r?s.createElement(d.l_,{to:"/login"}):r&&!r.Workspaces.find((e=>e.url===t))?s.createElement(d.l_,{to:"/workspace/sleact/channel/일반"}):s.createElement("div",null,s.createElement(ne,null,r&&s.createElement(te,null,s.createElement("span",{onClick:he},s.createElement(ae,{src:B().url(r.email,{s:"28px",d:"retro"}),alt:r.nickname})),C&&s.createElement(k,{style:{right:0,top:38},show:C,onCloseModal:he},s.createElement(re,null,s.createElement("img",{src:B().url(r.email,{s:"36px",d:"retro"}),alt:r.nickname}),s.createElement("div",null,s.createElement("span",{id:"profile-name"},r.nickname),s.createElement("span",{id:"profile-active"},"Active"))),s.createElement(le,{onClick:O},"로그아웃")))),s.createElement(oe,null,s.createElement(ie,null,r?.Workspaces.map((e=>s.createElement(p.rU,{key:e.id,to:`/workspace/${e.url}/channel/일반`},s.createElement(ge,null,e.name.slice(0,1).toUpperCase())))),s.createElement(ue,{onClick:H},"+")),s.createElement(ce,null,s.createElement(se,{onClick:xe},r?.Workspaces.find((e=>e.url===t))?.name),s.createElement(de,null,s.createElement(k,{show:S,onCloseModal:xe,style:{top:95,left:80}},s.createElement(pe,null,s.createElement("h2",null,r?.Workspaces.find((e=>e.url===t))?.name),s.createElement("button",{onClick:G},"워크스페이스에 사용자 초대"),s.createElement("button",{onClick:K},"채널 만들기"),s.createElement("button",{onClick:O},"로그아웃"))),s.createElement(m,{userData:r,channelData:i}),s.createElement(h,{userData:r}))),s.createElement(me,null,s.createElement(d.rs,null,s.createElement(d.AW,{path:"/workspace/:workspace/channel/:channel",component:V}),s.createElement(d.AW,{path:"/workspace/:workspace/dm/:id",component:ee})))),s.createElement(w,{show:x,onCloseModal:X},s.createElement("form",{onSubmit:L},s.createElement(Y.__,{id:"workspace-label"},s.createElement("span",null,"워크스페이스 이름"),s.createElement(Y.II,{id:"workspace",value:z,onChange:I})),s.createElement(Y.__,{id:"workspace-url-label"},s.createElement("span",null,"워크스페이스 url"),s.createElement(Y.II,{id:"workspace-url",value:A,onChange:D})),s.createElement(Y.zx,{type:"submit"},"생성하기"))),s.createElement(w,{show:y,onCloseModal:X},s.createElement("form",{onSubmit:W},s.createElement(Y.__,{id:"channel-label"},s.createElement("span",null,"채널 이름"),s.createElement(Y.II,{id:"channel",value:N,onChange:M})),s.createElement(Y.zx,null,"생성하기"))),s.createElement(w,{show:f,onCloseModal:X},s.createElement("form",{onSubmit:F},s.createElement(Y.__,{id:"member-label"},s.createElement("span",null,"이메일"),s.createElement(Y.II,{id:"member",type:"email",value:R,onChange:U})),s.createElement(Y.zx,{type:"submit"},"초대하기"))),s.createElement(Q.Ix,{position:"bottom-center"}))}},418:()=>{}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,